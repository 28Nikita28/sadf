import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message, MenuButtonWebApp, WebAppInfo
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from dotenv import load_dotenv

from generator import generate

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
class Reg(StatesGroup):
    wait = State()

# ========================
# üèóÔ∏è –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê
# ========================
async def startup():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é –±–æ—Ç–∞"""
    bot = Bot(os.getenv("TG_TOKEN"))
    await bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üåê App",
            web_app=WebAppInfo(url="https://w5model.netlify.app/")
        )
    )
    await bot.session.close()

# ========================
# üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô
# ========================
@dp.message(CommandStart())
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∏–∫–æ–Ω–∫—É "üåê App" —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É.')

@dp.message(Reg.wait)
async def waiting(message: Message):
    """–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è"""
    await message.answer('–°–µ–∫—É–Ω–¥–æ—á–∫—É!')

@dp.message()
async def gpt_work(message: Message, state: FSMContext):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await state.set_state(Reg.wait)
    result = await generate(message.text)
    await message.answer(result)
    await state.clear()

# ========================
# üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ========================
async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    await startup()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é
    bot = Bot(os.getenv("TG_TOKEN"))
    # Get the port from the environment variables, default to 10000
    port = int(os.environ.get("PORT", 10000))
    await dp.start_polling(bot, listen_address="0.0.0.0", port=port)

if __name__ == '__main__':
    asyncio.run(main())